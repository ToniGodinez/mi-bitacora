@echo off
echo ========================================
echo üöÄ DEPLOYMENT SCRIPT - Mi Bit√°cora
echo ========================================

echo.
echo 1. Verificando dependencias...
where vercel >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Vercel CLI no est√° instalado
    echo Instalando Vercel CLI...
    npm install -g vercel
)

echo ‚úÖ Vercel CLI disponible

echo.
echo 2. Construyendo proyecto...
call npm run build
if %errorlevel% neq 0 (
    echo ‚ùå Error en build
    pause
    exit /b 1
)

echo ‚úÖ Build completado

echo.
echo 3. Verificando archivos de deployment...
if not exist "vercel.json" (
    echo ‚ùå vercel.json no encontrado
    pause
    exit /b 1
)

if not exist "api\index.js" (
    echo ‚ùå API serverless function no encontrada
    pause
    exit /b 1
)

echo ‚úÖ Archivos de configuraci√≥n OK

echo.
echo 4. Iniciando deployment...
echo.
echo üìã IMPORTANTE: Configura estas variables de entorno en Vercel:
echo.
echo DATABASE_URL=postgresql://neondb_owner:npg_9TcH0ExpkdWX@ep-red-cherry-aerqtahe-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require^&channel_binding=require
echo VITE_TMDB_API_KEY=5f9a774c4ea58c1d35759ac3a48088d4
echo TMDB_API_KEY=5f9a774c4ea58c1d35759ac3a48088d4
echo NODE_ENV=production
echo.
echo ¬øQuieres continuar con el deployment? (S/N)
set /p continue="Continuar: "

if /i "%continue%" neq "S" (
    echo Deployment cancelado
    pause
    exit /b 0
)

echo.
echo üöÄ Desplegando en Vercel...
call vercel --prod

echo.
echo ========================================
echo üéâ DEPLOYMENT COMPLETADO
echo ========================================
echo.
echo üìù TODO: Despu√©s del deployment:
echo 1. Verifica que la app funcione en la URL de Vercel
echo 2. Confirma que las variables de entorno est√©n configuradas
echo 3. Prueba las optimizaciones en producci√≥n
echo 4. Monitorea el consumo de compute hours
echo.
pause
